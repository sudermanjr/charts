apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "synapse.fullname" . }}
  labels:
    {{- include "synapse.labels" . | nindent 4 }}
    app.kubernetes.io/component: server
  annotations:
    checksum/config: {{ include (print $.Template.BasePath "/config-secret.yaml") . | sha256sum }}
spec:
  replicas: {{ .Values.replicaCount }}
  updateStrategy:
    type: RollingUpdate
  serviceName: {{ include "synapse.fullname" . }}-headless
  selector:
    matchLabels:
      {{- include "synapse.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: server
  template:
    metadata:
    {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      labels:
        {{- include "synapse.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: server
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "synapse.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 8008
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          volumeMounts:
          - mountPath: /data
            name: persistent-data
          - mountPath: /config
            name: config
          - mountPath: /secrets
            name: secrets
          env:
            - name: SYNAPSE_REPORT_STATS
              value: "{{ .Values.reportStats }}"
            - name: SYNAPSE_SERVER_NAME
              value: "{{ .Values.serverName }}"
            - name: SYNAPSE_CONFIG_PATH
              value: "/config/homeserver.yaml"
            - name: UID
              value: "{{ .Values.securityContext.runAsUser }}"
            - name: GID
              value: "{{ .Values.securityContext.runAsUser }}"
          {{- range $key, $value := .Values.extraEnv }}
            - name: {{ $key }}
              value: {{ $value | quote }}
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      volumes:
      - name: config
        secret:
          secretName: {{ include "synapse.fullname" . }}-config
      - name: secrets
        secret:
          secretName: {{ include "synapse.fullname" . }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
  volumeClaimTemplates:
  - metadata:
      name: persistent-data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: "{{ .Values.storageClass }}"
      resources:
        requests:
          storage: "{{ .Values.storageSize }}"
